<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>408真题</title>
      <link href="/post/b5d703d3.html"/>
      <url>/post/b5d703d3.html</url>
      
        <content type="html"><![CDATA[<div class="row">    <embed src="/2009年计算机408统考真题.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++中map与ordered_map的区别</title>
      <link href="/post/239373d.html"/>
      <url>/post/239373d.html</url>
      
        <content type="html"><![CDATA[<h3 id="C-中map与ordered-map的区别"><a href="#C-中map与ordered-map的区别" class="headerlink" title="C++中map与ordered_map的区别"></a>C++中map与ordered_map的区别</h3><h4 id="1-头文件"><a href="#1-头文件" class="headerlink" title="1. 头文件"></a>1. 头文件</h4><ul><li>map: <strong>#include &lt; map &gt;</strong></li><li>unordered_map: <strong>#include &lt; unordered_map &gt;</strong></li></ul><h4 id="2-内部实现机理"><a href="#2-内部实现机理" class="headerlink" title="2. 内部实现机理"></a>2. 内部实现机理</h4><ul><li>map： map内部实现了一个红黑树，该结构具有自动排序的功能，因此map内部的所有元素都是<strong>有序的</strong>，红黑树的每一个节点都代表着map的一个元素，因此，对于map进行的查找，删除，添加等一系列的操作都相当于是对红黑树进行这样的操作，故红黑树的效率决定了map的效率。</li><li>unordered_map: unordered_map内部实现了一个哈希表，因此其元素的排列顺序是杂乱的，无序的</li></ul><p>​unordered_map和map类似，都是存储的key-value的值，可以通过key快速索引到value。不同的是unordered_map不会根据key的大小进行排序，存储时是根据key的hash值判断元素是否相同，即unordered_map内部元素是无序的，而map中的元素是按照二叉搜索树存储，进行中序遍历会得到有序遍历。</p><p>​<strong>使用时map的key需要定义operator&lt;。</strong>而unordered_map需要定义<strong>hash_value函数并且重载operator&#x3D;&#x3D;。</strong>但是很多系统内置的数据类型都自带这些，如果是自定义类型，那么就需要自己重载operator&lt;或者hash_value()了。</p><h4 id="3-优缺点及适用处"><a href="#3-优缺点及适用处" class="headerlink" title="3. 优缺点及适用处"></a>3. 优缺点及适用处</h4><h5 id="3-1-map"><a href="#3-1-map" class="headerlink" title="3.1 map"></a>3.1 map</h5><ul><li>优点<ul><li>有序性，这是map结构最大的优点，其元素的有序性在很多应用中都会简化很多的操作</li><li>红黑树，内部实现一个红黑书使得map的很多操作在lgnlgn的时间复杂度下就可以实现，因此效率非常的高</li></ul></li><li>缺点<ul><li>空间占用率高，因为map内部实现了红黑树，虽然提高了运行效率，但是因为每一个节点都需要额外保存父节点，孩子节点以及红&#x2F;黑性质，使得每一个节点都占用大量的空间</li></ul></li><li>适用处<ul><li>对于那些有顺序要求的问题，用map会更高效一些</li></ul></li></ul><h5 id="3-2-unordered-map"><a href="#3-2-unordered-map" class="headerlink" title="3.2 unordered_map"></a>3.2 unordered_map</h5><ul><li>优点<ul><li>因为内部实现了哈希表，因此其查找速度非常的快</li></ul></li><li>缺点<ul><li>哈希表的建立比较耗费时间</li></ul></li><li>适用处<ul><li>对于查找问题，unordered_map会更加高效一些，因此遇到查找问题，常会考虑一下用unordered_map</li></ul></li></ul><h4 id="note："><a href="#note：" class="headerlink" title="note："></a>note：</h4><p>对于<code>unordered_map</code>或者<code>unordered_set</code>容器，其遍历顺序与创建该容器时输入元素的顺序是不一定一致的，遍历是按照哈希表从前往后依次遍历的</p>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> map </tag>
            
            <tag> unordered_map </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode 1.两数之和</title>
      <link href="/post/f8320b25.html"/>
      <url>/post/f8320b25.html</url>
      
        <content type="html"><![CDATA[<h2 id="LeetCode-1-两数之和"><a href="#LeetCode-1-两数之和" class="headerlink" title="LeetCode 1. 两数之和"></a>LeetCode 1. 两数之和</h2><p>给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p><p>你可以按任意顺序返回答案。</p><p><strong>示例1：</strong></p><blockquote><p>输入：nums &#x3D; [2,7,11,15], target &#x3D; 9<br>输出：[0,1]<br>解释：因为 nums[0] + nums[1] &#x3D;&#x3D; 9 ，返回 [0, 1] 。</p></blockquote><p><strong>示例2：</strong></p><blockquote><p>输入：nums &#x3D; [3,2,4], target &#x3D; 6<br>输出：[1,2]</p></blockquote><p><strong>示例3：</strong></p><blockquote><p>输入：nums &#x3D; [3,3], target &#x3D; 6<br>输出：[0,1]</p></blockquote><p>提示：</p><p>2 &lt;&#x3D; nums.length &lt;&#x3D; 104<br>-109 &lt;&#x3D; nums[i] &lt;&#x3D; 109<br>-109 &lt;&#x3D; target &lt;&#x3D; 109<br>只会存在一个有效答案</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">twoSum</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;nums, <span class="type">int</span> target)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"><span class="comment">/*解法1 哈希表辅助 */</span></span><br><span class="line">        unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; val_to_index;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> need = target - nums[i];</span><br><span class="line">            <span class="keyword">auto</span> it = val_to_index.<span class="built_in">find</span>(need);</span><br><span class="line">            <span class="keyword">if</span> (it!=val_to_index.<span class="built_in">end</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;it-&gt;second,i&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            val_to_index[nums[i]] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> nSum </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode 2.两数相加</title>
      <link href="/post/eb9b83c1.html"/>
      <url>/post/eb9b83c1.html</url>
      
        <content type="html"><![CDATA[<h2 id="LeetCode-2-两数相加"><a href="#LeetCode-2-两数相加" class="headerlink" title="LeetCode 2. 两数相加"></a>LeetCode 2. 两数相加</h2><p>给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。</p><p>请你将两个数相加，并以相同形式返回一个表示和的链表。</p><p>你可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p><p><strong>示例1：</strong></p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2021/01/02/addtwonumber1.jpg" style="zoom:50%;" /><blockquote><p>输入：l1 &#x3D; [2,4,3], l2 &#x3D; [5,6,4]<br>输出：[7,0,8]<br>解释：342 + 465 &#x3D; 807.</p></blockquote><p><strong>示例2：</strong></p><blockquote><p>输入：l1 &#x3D; [0], l2 &#x3D; [0]<br>输出：[0]</p></blockquote><p><strong>示例3：</strong></p><blockquote><p>输入：l1 &#x3D; [9,9,9,9,9,9,9], l2 &#x3D; [9,9,9,9]<br>输出：[8,9,9,9,0,0,0,1]</p></blockquote><p>提示：</p><blockquote><ul><li>每个链表中的节点数在范围 <code>[1, 100]</code> 内</li><li><code>0 &lt;= Node.val &lt;= 9</code></li><li>题目数据保证列表表示的数字不含前导零</li></ul></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  Definition for singly-linked list.</span></span><br><span class="line"><span class="comment">//  struct ListNode &#123;</span></span><br><span class="line"><span class="comment">//     int val;</span></span><br><span class="line"><span class="comment">//     ListNode *next;</span></span><br><span class="line"><span class="comment">//     ListNode() : val(0), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment">//     ListNode(int x) : val(x), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment">//     ListNode(int x, ListNode *next) : val(x), next(next) &#123;&#125;</span></span><br><span class="line"><span class="comment">//   &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">addTwoNumbers</span><span class="params">(ListNode *l1, ListNode *l2)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> carry = <span class="number">0</span>;</span><br><span class="line">        ListNode *res = <span class="keyword">new</span> <span class="built_in">ListNode</span>();</span><br><span class="line">        ListNode *r = res;</span><br><span class="line">        <span class="keyword">while</span> (l1 || l2)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> x = l1 ? l1-&gt;val : <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> y = l2 ? l2-&gt;val : <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> sum = x + y + carry;</span><br><span class="line">            carry = sum / <span class="number">10</span>;</span><br><span class="line">            res-&gt;next = <span class="keyword">new</span> <span class="built_in">ListNode</span>(sum % <span class="number">10</span>);</span><br><span class="line">            res = res-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (l1)</span><br><span class="line">                l1 = l1-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (l2)</span><br><span class="line">                l2 = l2-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (carry &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            res-&gt;next = <span class="keyword">new</span> <span class="built_in">ListNode</span>(carry);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> r-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派配置</title>
      <link href="/post/cfe260ea.html"/>
      <url>/post/cfe260ea.html</url>
      
        <content type="html"><![CDATA[<p>树莓派环境运行环境配置</p><h2 id="1-Java环境配置"><a href="#1-Java环境配置" class="headerlink" title="1. Java环境配置"></a>1. Java环境配置</h2><p>1.1 根据系统位数来选择相应的jdk版本下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.oracle.com/otn-pub/java/jdk/8u341-b10/424b9da4b48848379167015dcc250d8d/jdk-8u341-linux-aarch64.tar.gz</span><br></pre></td></tr></table></figure><p>1.2 解压、安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf jdk-8u341-linux-aarch64.tar.gz</span><br></pre></td></tr></table></figure><p>​将解压的文件夹移动到&#x2F;usr&#x2F;lib&#x2F;jvm下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /home/pi/download/jdk1.8.0_341/ /usr/lib/jvm/</span><br></pre></td></tr></table></figure><p>1.3 配置环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/profile</span><br><span class="line"></span><br><span class="line">// 在配置文件的最后添加</span><br><span class="line">export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_341</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br></pre></td></tr></table></figure><p>​在最后添加</p><p>1.4 使配置文件生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>1.5 打印Java版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java --version</span><br></pre></td></tr></table></figure><h2 id="2-Redis环境配置"><a href="#2-Redis环境配置" class="headerlink" title="2. Redis环境配置"></a>2. Redis环境配置</h2><p>2.1 redis安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install redis-server</span><br></pre></td></tr></table></figure><p>2.2 启动redis</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-server //前台启动</span><br><span class="line">redis-server &amp; // 后台启动</span><br><span class="line">redis-server ./redis.config &amp; // 指定配置文件后台启动</span><br></pre></td></tr></table></figure><p>​检查是否启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -df|gref redis</span><br></pre></td></tr></table></figure><p>​查看占用端口号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lanp | grep 6379</span><br></pre></td></tr></table></figure><p>​关闭服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kill -9 端口号 // 暴力关闭，容易造成数据丢失</span><br><span class="line">redis-cli shutdown // 不会造成数据丢失</span><br></pre></td></tr></table></figure><h2 id="3-MariaDB-环境配置"><a href="#3-MariaDB-环境配置" class="headerlink" title="3. MariaDB 环境配置"></a>3. MariaDB 环境配置</h2><p>3.1 安装mysql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install mariadb-server</span><br></pre></td></tr></table></figure><p>3.2 配置数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql_secure_installation // 启动mysql的安全安装命令</span><br></pre></td></tr></table></figure><p>3.3 修改为大小写不敏感</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/mysql/mariadb.conf.d/50-server.cnf </span><br><span class="line"></span><br><span class="line">lower_case_table_name=1</span><br><span class="line"></span><br><span class="line">进入mariadb交互模式： mysql -uroot -proot</span><br><span class="line"></span><br><span class="line">通过命令：show variables like &quot;%lower_case_table_name&quot; 可以看到 lower_case_table_name的值变为1了。</span><br></pre></td></tr></table></figure><p>3.4 mysql 启动、停止、重启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">启动MariaDB命令：systemctl start mariadb.service</span><br><span class="line">停止MariaDB命令：systemctl stop mariadb.service</span><br><span class="line">重启MariaDB命令：systemctl restart mariadb.service</span><br></pre></td></tr></table></figure><h3 id="4-Nginx环境配置"><a href="#4-Nginx环境配置" class="headerlink" title="4. Nginx环境配置"></a>4. Nginx环境配置</h3><p>4.1 安装gcc g++的依赖库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential</span><br><span class="line">sudo apt-get install libtool</span><br></pre></td></tr></table></figure><p>4.2 安装pcre依赖库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install libpcre3 libpcre3-dev</span><br></pre></td></tr></table></figure><p>4.3 安装zlib依赖库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install zlib1g-dev</span><br></pre></td></tr></table></figure><p>4.4 安装ssl依赖库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install openssl</span><br></pre></td></tr></table></figure><p>4.5 安装nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nginx</span><br></pre></td></tr></table></figure><p>安装完成后，在浏览器输入服务器IP地址，即可验证是否Nginx安装成功</p><h3 id="5-其他配置"><a href="#5-其他配置" class="headerlink" title="5.其他配置"></a>5.其他配置</h3><p>5.1 开启ftp远程root权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vsftpd</span><br></pre></td></tr></table></figure><p>​修改配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/vsftpd.conf</span><br><span class="line"></span><br><span class="line">找到以下选项修改</span><br><span class="line">anonymous_enable=NO </span><br><span class="line">local_enable=YES  </span><br><span class="line">write_enable=YES</span><br><span class="line">local_umask=022</span><br><span class="line">然后重启ftp服务</span><br><span class="line">sudo service vsftpd restart</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在FTP中使用root连接</span><br><span class="line">编辑   /etc/ftpusers 中</span><br><span class="line">sudo nano /etc/ftpusers</span><br><span class="line">在root前边加#, 注释掉它</span><br><span class="line">sudo service vsftpd restart</span><br><span class="line">这样就可以用root用户登录了</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
